
""" The Enaml UI code for the scalar viewer

"""

from enaml.core.api import Looper
from atom.api import Atom, List, observe, Bool, Enum, Str, Int
from enaml.layout.api import vbox, hbox, spacer, grid, HSplitLayout, Box, spacer
from enaml.widgets.api import (Window, Container, DockArea, MPLCanvas,
                               CheckBox, DockItem, DockPane, Form, Label,
                               Slider, MainWindow, ComboBox, SpinBox,
                               GroupBox, ScrollArea, PushButton, RadioButton,
                               Field,
                               )
from enaml.stdlib.fields import FloatField
from replay.model.scalar_model import ScalarCollection
import random

random_text = ['cat', 'insert coin', 'it\'s a bird!', 'aardvark']
enamldef ScalarController(Container):
    ScrollArea: scroller:
        Container:
            Form:
                row_spacing = 0
                Label:
                    text = 'update frequency'
                FloatField: rate:
                    value := scalar_collection.redraw_every
                    minimum = 0.0
                    #fix_invalid_input = True
                Label:
                    text = 'update unit'
                ComboBox:
                    items << list(ScalarCollection.redraw_type.items)
                    selected_item >> scalar_collection.redraw_type
                    index << ScalarCollection.redraw_type.items.index(
                        scalar_collection.redraw_type
                    )
                Label:
                    text = 'update rate'
                Label:
                    text := scalar_collection.update_rate

            GroupBox: plot:
                title_align = 'center'
                title = 'Plot'
                padding = Box(0, 0, 0, 0)
                Form:
                    Label:
                        text = "Column to align against"
                    Label:
                        text = "Column alignment options"
                    ComboBox: xcmb:
                        items << list(scalar_collection.col_names)
                        editable = True
                        index = 0
                        selected_item >> scalar_collection.alignment_col
                    PushButton: random_btn:
                        text = 'I dare you...'
                        clicked ::
                            random_btn.text = random.choice(random_text)
                    Label:
                        text = "X axis"
                    Label:
                        text = "X axis options"
                    ComboBox: x_axis:
                        items << list(scalar_collection.col_names)
                        editable = True
                        index = 0
                        selected_item >> scalar_collection.x
                    Container:
                        constraints = [hbox(btn_val, btn_time, spacer)]
                        RadioButton: btn_val:
                            text = "data"
                            checked := scalar_collection.x_is_data
                        RadioButton: btn_time:
                            text = "time"
                            checked := scalar_collection.x_is_time

                    Label:
                        text = "Y axis"
                    Label:
                        text = "Fit"
                    row_spacing = 0
                    Looper: looper:
                        iterable << scalar_collection.col_names
                        PushButton: cb_plot:
                            text = loop_item
                            enabled := (
                                scalar_collection.
                                    scalar_models[loop_item].can_plot
                            )
                            checked := (
                                scalar_collection.
                                    scalar_models[loop_item].is_plotting
                            )
                            checkable := (
                                scalar_collection.
                                    scalar_models[loop_item].can_plot
                            )
                        RadioButton: cb_fit:
                            text = loop_item
                            checked ::
                                scalar_collection.fit_target = text
                                print('cb_fit clicked for {}'.format(text))
                        Label:
                            text = 'memory address'
                        Label:
                            text << str(id(scalar_collection.scalar_models[loop_item]))
            GroupBox: fit:
                title_align = 'center'
                title = 'Fit'
                padding = Box(0, 0, 0, 0)


enamldef ScalarView(Container):
    #alias fitter
    Container:
        constraints = [
            vbox(
                hbox(check, spacer, fit),
                #vbox(canvas, fitter),
                vbox(canvas),
            ),
        ]
        CheckBox: check:
            text = 'Toolbar Visible'
            enabled = False
            checked := canvas.toolbar_visible
        CheckBox: fit:
            text = 'Fitting Visible'
            #checked := fitter.show_fit
        MPLCanvas: canvas:
            figure << scalar_collection._fig
            toolbar_visible = True
#        MultiFitController: fitter:
#            pass


enamldef ScalarContainer(Window): window:
    attr scalar_collection
    Container:
        DockArea: da:
            layout = HSplitLayout('controls', 'views')
            DockItem:
                name = 'views'
                title = 'Scalar View'
                Container:
                    ScalarView: contains:
                        pass
            DockItem:
                name = 'controls'
                title = 'Scalar Controller'
                Container:
                    ScalarController: controls:
                        pass