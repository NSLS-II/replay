
""" The Enaml UI code for the Cross Section Viewer and its control panel

<< autodoc-me >>
"""
from atom.api import Atom, List, observe, Bool, Enum, Str, Int
from enaml.layout.api import vbox, hbox, spacer, HSplitLayout
from enaml.widgets.api import (Window, Container, DockArea, MPLCanvas,
                               CheckBox, DockItem, DockPane, Form, Label,
                               Slider, MainWindow, ComboBox, SpinBox,
                               GroupBox
                               )
from enaml.stdlib.fields import FloatField
# valid options for matplotlib imshow interpolation
interpolation = ['none', 'nearest', 'bilinear', 'bicubic','spline16',
                 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser',
                 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell',
                 'sinc', 'lanczos']
# this will be useable instead if PR #3682 gets merged into master
# from matplotlib.axes.imshow import interpolation

# create the colormap list
from matplotlib.cm import datad
cmap = datad.keys()
cmap.sort()


# create the intensity limits list
limit_options = ['full range', 'percentile', 'absolute']


enamldef SliderWithSpinner(Container): sws:
    attr cross_section_model
    Form:
        Label: lbl:
            text = "Frame number"
        SpinBox: sbox:
            value := cross_section_model.image_index
            minimum := cross_section_model.minimum
            maximum := cross_section_model.num_images
        CheckBox:
            text = "Auto-update"
            checked := cross_section_model.auto_update
        Slider: slider:
            value := cross_section_model.image_index
            minimum := cross_section_model.minimum
            maximum := cross_section_model.num_images


enamldef CrossSectionController(DockItem): csdock:
    title = "Cross Section Controls"
    attr cross_section_model
    Container: c:
        Form: f:
            padding = 0
            Label:
                text = "Color map"
            ComboBox: cmb_cmap:
                items = cmap
                editable = True
                index ::
                    cross_section_model.cmap = cmap[index]
            Label:
                text = "Interpolation"
            ComboBox:
                items = interpolation
                index ::
                    cross_section_model.interpolation = interpolation[index]
        GroupBox:
            title = "Image intensity"
            Form:
                padding = 0
                Label:
                    text = "Limit Strategy"
                ComboBox:
                    items = limit_options
                    index ::
                        cross_section_model.limit_func = limit_options[index]
                Label:
                    text = "I min"
                FloatField: imin:
                    minimum << cross_section_model.img_min
                    maximum << cross_section_model.img_max
                    value := cross_section_model.disp_min
                Label:
                    text = "I max"
                FloatField: imax:
                    minimum << cross_section_model.img_min
                    maximum << cross_section_model.img_max
                    value := cross_section_model.disp_min

        SliderWithSpinner: sws:
            cross_section_model = csdock.cross_section_model


enamldef CrossSectionView(DockItem):
    attr cross_section_model
    title = 'Cross Section View'
    Container:
        CheckBox: check:
            text = 'Toolbar Visible'
            checked := canvas.toolbar_visible
        MPLCanvas: canvas:
            figure = cross_section_model.figure


enamldef CrossSectionMain(MainWindow): mw:
    title = "Cross Section Main Window"
    attr cross_section_model
    Container:
        DockArea:
            layout = HSplitLayout('controller', 'view')
            CrossSectionController:
                name = 'controller'
                cross_section_model = mw.cross_section_model
            CrossSectionView:
                name = 'view'
                cross_section_model = mw.cross_section_model

